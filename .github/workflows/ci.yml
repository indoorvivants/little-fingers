name: CI
on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["*"]

jobs:
  build:
    name: Build (${{ matrix.OS }})
    strategy:
      fail-fast: false
      matrix:
        # OS: ["macos-14"] #, "macos-14", "ubuntu-latest"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v3

      - uses: coursier/cache-action@v6

      - name: Cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/sbt-vcpkg/vcpkg-install
            ~/.cache/sbt-vcpkg/vcpkg-install
            ~/.cache/sbt-vcpkg/vcpkg
          key: ${{ runner.os }}-sbt-vcpkg

      - uses: VirtusLab/scala-cli-setup@main
        with:
          jvm: temurin:17
          power: true

      - run: sudo apt install -y libglfw3-dev ninja-build
        if: startsWith(matrix.os, 'ubuntu-') 

      - run: brew install ninja
        if: startsWith(matrix.os, 'macos-') 

      - name: CI and build the binary
        run: ./build.sc app-platform-release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: little-fingers-*
          name: ${{ matrix.os }}-binaries
          if-no-files-found: error

      - name: Print logs
        run: |
          if [ $(uname) == "Darwin" ]; then
            cat /Users/runner/Library/Caches/sbt-vcpkg/vcpkg/buildtrees/**/*.log
          else 
            cat /home/runner/.cache/sbt-vcpkg/vcpkg/buildtrees/**/*.log
          fi
        if: failure()

  release:
    needs: [build]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        id: download
        with:
          path: binaries

      - name: List downloaded binaries
        run: ls -R binaries

      - name: Upload release binaries
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "${{steps.download.outputs.download-path}}/**/little-fingers-*"
